CCS PCM C Compiler, Version 4.104, 5967               26-set-23 18:10

               Filename: D:\Microcontroladores\Prova\1_LEDS_GIRANDO\luz_circulante.lst

               ROM used: 551 words (7%)
                         Largest free fragment is 2048
               RAM used: 8 (2%) at main() level
                         21 (6%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0F4
0003:  NOP
.................... //#include "D:\Microcontroladores\Prova\1_LEDS_GIRANDO\luz_circulante.h" 
....................  
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES BROWNOUT                 //Reset when brownout detected 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=20000000) 
*
00E0:  MOVLW  23
00E1:  MOVWF  04
00E2:  BCF    03.7
00E3:  MOVF   00,W
00E4:  BTFSC  03.2
00E5:  GOTO   0F3
00E6:  MOVLW  06
00E7:  MOVWF  78
00E8:  CLRF   77
00E9:  DECFSZ 77,F
00EA:  GOTO   0E9
00EB:  DECFSZ 78,F
00EC:  GOTO   0E8
00ED:  MOVLW  7B
00EE:  MOVWF  77
00EF:  DECFSZ 77,F
00F0:  GOTO   0EF
00F1:  DECFSZ 00,F
00F2:  GOTO   0E6
00F3:  RETURN
....................  
....................  
.................... void main() 
.................... { 
00F4:  CLRF   04
00F5:  BCF    03.7
00F6:  MOVLW  1F
00F7:  ANDWF  03,F
00F8:  BSF    03.5
00F9:  BSF    1F.0
00FA:  BSF    1F.1
00FB:  BSF    1F.2
00FC:  BCF    1F.3
00FD:  MOVLW  07
00FE:  MOVWF  1C
*
0102:  MOVLW  01
0103:  MOVWF  21
....................  
....................    unsigned int valor = 1; 
....................    setup_adc_ports(AN0); // ajusta a porta A0 para entrada analógica 
0104:  BSF    03.5
0105:  BCF    1F.0
0106:  BSF    1F.1
0107:  BSF    1F.2
0108:  BSF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
0109:  BCF    1F.6
010A:  BCF    03.5
010B:  BCF    1F.6
010C:  BCF    1F.7
010D:  BSF    03.5
010E:  BCF    1F.7
010F:  BCF    03.5
0110:  BSF    1F.0
....................    setup_psp(PSP_DISABLED); 
0111:  BSF    03.5
0112:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
0113:  BCF    03.5
0114:  BCF    14.5
0115:  BCF    20.5
0116:  MOVF   20,W
0117:  BSF    03.5
0118:  MOVWF  07
0119:  BCF    03.5
011A:  BSF    20.4
011B:  MOVF   20,W
011C:  BSF    03.5
011D:  MOVWF  07
011E:  BCF    03.5
011F:  BCF    20.3
0120:  MOVF   20,W
0121:  BSF    03.5
0122:  MOVWF  07
0123:  MOVLW  01
0124:  BCF    03.5
0125:  MOVWF  14
0126:  MOVLW  00
0127:  BSF    03.5
0128:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0129:  MOVF   01,W
012A:  ANDLW  C7
012B:  IORLW  08
012C:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
012D:  BCF    03.5
012E:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
012F:  MOVLW  00
0130:  MOVWF  78
0131:  MOVWF  12
0132:  MOVLW  00
0133:  BSF    03.5
0134:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
0135:  MOVLW  07
0136:  MOVWF  1C
0137:  MOVF   05,W
0138:  MOVWF  05
0139:  MOVLW  10
013A:  MOVWF  77
013B:  DECFSZ 77,F
013C:  GOTO   13B
013D:  NOP
013E:  MOVF   1C,W
013F:  BCF    03.5
0140:  BCF    0D.6
....................    setup_vref(FALSE); 
0141:  BSF    03.5
0142:  CLRF   1D
....................    set_adc_channel(0); 
0143:  MOVLW  00
0144:  MOVWF  78
0145:  BCF    03.5
0146:  MOVF   1F,W
0147:  ANDLW  C7
0148:  IORWF  78,W
0149:  MOVWF  1F
....................  
....................     
....................     
....................    output_low(PIN_D0); 
014A:  BSF    03.5
014B:  BCF    08.0
014C:  BCF    03.5
014D:  BCF    08.0
....................    output_low(PIN_D1); 
014E:  BSF    03.5
014F:  BCF    08.1
0150:  BCF    03.5
0151:  BCF    08.1
....................    output_low(PIN_D2); 
0152:  BSF    03.5
0153:  BCF    08.2
0154:  BCF    03.5
0155:  BCF    08.2
....................    output_low(PIN_D3); 
0156:  BSF    03.5
0157:  BCF    08.3
0158:  BCF    03.5
0159:  BCF    08.3
....................    output_low(PIN_D4); 
015A:  BSF    03.5
015B:  BCF    08.4
015C:  BCF    03.5
015D:  BCF    08.4
....................    output_low(PIN_D5); 
015E:  BSF    03.5
015F:  BCF    08.5
0160:  BCF    03.5
0161:  BCF    08.5
....................    output_low(PIN_D6); 
0162:  BSF    03.5
0163:  BCF    08.6
0164:  BCF    03.5
0165:  BCF    08.6
....................    output_low(PIN_D7); 
0166:  BSF    03.5
0167:  BCF    08.7
0168:  BCF    03.5
0169:  BCF    08.7
....................     
....................    // TODO: USER CODE!! 
....................     
....................    while(true){ 
....................       valor = read_adc() * 0.039; // 10/255 = 0,0392  
016A:  BSF    1F.2
016B:  BTFSC  1F.2
016C:  GOTO   16B
016D:  MOVF   1E,W
016E:  CLRF   24
016F:  MOVWF  23
0170:  GOTO   004
0171:  MOVF   7A,W
0172:  MOVWF  26
0173:  MOVF   79,W
0174:  MOVWF  25
0175:  MOVF   78,W
0176:  MOVWF  24
0177:  MOVF   77,W
0178:  MOVWF  23
0179:  MOVLW  77
017A:  MOVWF  2A
017B:  MOVLW  BE
017C:  MOVWF  29
017D:  MOVLW  1F
017E:  MOVWF  28
017F:  MOVLW  7A
0180:  MOVWF  27
0181:  GOTO   023
0182:  MOVF   7A,W
0183:  MOVWF  25
0184:  MOVF   79,W
0185:  MOVWF  24
0186:  MOVF   78,W
0187:  MOVWF  23
0188:  MOVF   77,W
0189:  MOVWF  22
018A:  GOTO   09A
018B:  MOVF   78,W
018C:  MOVWF  21
....................        
....................       if(valor>10) valor = 10; 
018D:  MOVF   21,W
018E:  SUBLW  0A
018F:  BTFSC  03.0
0190:  GOTO   193
0191:  MOVLW  0A
0192:  MOVWF  21
....................       if(valor<=1) valor = 1; 
0193:  MOVF   21,W
0194:  SUBLW  01
0195:  BTFSS  03.0
0196:  GOTO   199
0197:  MOVLW  01
0198:  MOVWF  21
....................        
....................       output_high(PIN_A5); 
0199:  BSF    03.5
019A:  BCF    05.5
019B:  BCF    03.5
019C:  BSF    05.5
....................       output_high(PIN_D0); 
019D:  BSF    03.5
019E:  BCF    08.0
019F:  BCF    03.5
01A0:  BSF    08.0
....................       delay_ms(valor*100); 
01A1:  MOVF   21,W
01A2:  MOVWF  22
01A3:  MOVLW  64
01A4:  MOVWF  23
01A5:  CALL   0BB
01A6:  MOVF   78,W
01A7:  MOVWF  22
01A8:  MOVWF  23
01A9:  CALL   0E0
....................       output_low(PIN_D0); 
01AA:  BSF    03.5
01AB:  BCF    08.0
01AC:  BCF    03.5
01AD:  BCF    08.0
....................       output_high(PIN_D1); 
01AE:  BSF    03.5
01AF:  BCF    08.1
01B0:  BCF    03.5
01B1:  BSF    08.1
....................       delay_ms(valor*100); 
01B2:  MOVF   21,W
01B3:  MOVWF  22
01B4:  MOVLW  64
01B5:  MOVWF  23
01B6:  CALL   0BB
01B7:  MOVF   78,W
01B8:  MOVWF  22
01B9:  MOVWF  23
01BA:  CALL   0E0
....................       output_low(PIN_D1); 
01BB:  BSF    03.5
01BC:  BCF    08.1
01BD:  BCF    03.5
01BE:  BCF    08.1
....................       output_high(PIN_D2); 
01BF:  BSF    03.5
01C0:  BCF    08.2
01C1:  BCF    03.5
01C2:  BSF    08.2
....................       delay_ms(valor*100); 
01C3:  MOVF   21,W
01C4:  MOVWF  22
01C5:  MOVLW  64
01C6:  MOVWF  23
01C7:  CALL   0BB
01C8:  MOVF   78,W
01C9:  MOVWF  22
01CA:  MOVWF  23
01CB:  CALL   0E0
....................       output_low(PIN_D2); 
01CC:  BSF    03.5
01CD:  BCF    08.2
01CE:  BCF    03.5
01CF:  BCF    08.2
....................       output_high(PIN_D3); 
01D0:  BSF    03.5
01D1:  BCF    08.3
01D2:  BCF    03.5
01D3:  BSF    08.3
....................       delay_ms(valor*100);  
01D4:  MOVF   21,W
01D5:  MOVWF  22
01D6:  MOVLW  64
01D7:  MOVWF  23
01D8:  CALL   0BB
01D9:  MOVF   78,W
01DA:  MOVWF  22
01DB:  MOVWF  23
01DC:  CALL   0E0
....................        
....................       // Troca de Display 
....................       output_low(PIN_A5); 
01DD:  BSF    03.5
01DE:  BCF    05.5
01DF:  BCF    03.5
01E0:  BCF    05.5
....................       output_high(PIN_A4); 
01E1:  BSF    03.5
01E2:  BCF    05.4
01E3:  BCF    03.5
01E4:  BSF    05.4
....................       delay_ms(valor*100); 
01E5:  MOVF   21,W
01E6:  MOVWF  22
01E7:  MOVLW  64
01E8:  MOVWF  23
01E9:  CALL   0BB
01EA:  MOVF   78,W
01EB:  MOVWF  22
01EC:  MOVWF  23
01ED:  CALL   0E0
....................       output_low(PIN_D3); 
01EE:  BSF    03.5
01EF:  BCF    08.3
01F0:  BCF    03.5
01F1:  BCF    08.3
....................       output_high(PIN_D4); 
01F2:  BSF    03.5
01F3:  BCF    08.4
01F4:  BCF    03.5
01F5:  BSF    08.4
....................       delay_ms(valor*100); 
01F6:  MOVF   21,W
01F7:  MOVWF  22
01F8:  MOVLW  64
01F9:  MOVWF  23
01FA:  CALL   0BB
01FB:  MOVF   78,W
01FC:  MOVWF  22
01FD:  MOVWF  23
01FE:  CALL   0E0
....................       output_low(PIN_D4); 
01FF:  BSF    03.5
0200:  BCF    08.4
0201:  BCF    03.5
0202:  BCF    08.4
....................       output_high(PIN_D5); 
0203:  BSF    03.5
0204:  BCF    08.5
0205:  BCF    03.5
0206:  BSF    08.5
....................       delay_ms(valor*100); 
0207:  MOVF   21,W
0208:  MOVWF  22
0209:  MOVLW  64
020A:  MOVWF  23
020B:  CALL   0BB
020C:  MOVF   78,W
020D:  MOVWF  22
020E:  MOVWF  23
020F:  CALL   0E0
....................       output_low(PIN_D5); 
0210:  BSF    03.5
0211:  BCF    08.5
0212:  BCF    03.5
0213:  BCF    08.5
....................       output_high(PIN_D0); 
0214:  BSF    03.5
0215:  BCF    08.0
0216:  BCF    03.5
0217:  BSF    08.0
....................       delay_ms(valor*100); 
0218:  MOVF   21,W
0219:  MOVWF  22
021A:  MOVLW  64
021B:  MOVWF  23
021C:  CALL   0BB
021D:  MOVF   78,W
021E:  MOVWF  22
021F:  MOVWF  23
0220:  CALL   0E0
....................       output_low(PIN_A4); 
0221:  BSF    03.5
0222:  BCF    05.4
0223:  BCF    03.5
0224:  BCF    05.4
....................        
....................    } 
0225:  GOTO   16A
....................  
.................... } 
0226:  SLEEP

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
